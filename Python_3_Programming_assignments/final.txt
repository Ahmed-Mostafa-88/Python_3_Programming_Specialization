scores = "67 80 90 78 93 20 79 89 96 97 92 88 79 68 58 90 98 100 79 74 83 88 80 86 85 70 90 100"

a=scores.split(" ")
a_scores=0
for i in a:
    if int(i)>= 90:
        a_scores+=1
--------------------------------------------------------------------------------------------------------

inventory = ["shoes, 12, 29.99", "shirts, 20, 9.99", "sweatpants, 25, 15.00", "scarves, 13, 7.75"]

g = []
for i in inventory:
    p = i.split(",")
    g.append(p)

for k in g:
    name, quantity, price = k[0], int(k[1]), float(k[2])
    print("The store has {} {}, each for {:.2f} USD.".format(quantity, name, price))
-------------------------------------------------------------------------------------------------------------
p_phrase = "was it a car or a cat I saw"

# Reverse the string
r_phrase = p_phrase[::-1]

# Check if it is a palindrome
is_palindrome = p_phrase == r_phrase

print("Original phrase:", p_phrase)
print("Reversed phrase:", r_phrase)
print("Is it a palindrome?", is_palindrome)
---------------------------------------------------------------------------------------------------------------
Write code that uses the string stored in org and creates an acronym which is assigned to the variable acro. Only the first letter of each word should be used, each letter in the acronym should be a capital letter, and there should be nothing to separate the letters of the acronym. Words that should not be included in the acronym are stored in the list stopwords. For example, if org was assigned the string “hello to world” then the resulting acronym should be “HW”.

# Define a list of stopwords
stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', "The"]

# Input string
org = "The organization for health, safety, and education"

# Step 1: Split the input string into words
words = org.split()

# Step 2: Initialize an empty list to store the filtered words (without stopwords)
filtered_words = []

# Step 3: Iterate through each word and check if it's not a stopword. If not, add it to the filtered_words list.
for word in words:
    # Convert the word to lowercase for case-insensitive comparison with stopwords
    lowercase_word = word.lower()
    if lowercase_word not in stopwords:
        filtered_words.append(word)

# Step 4: Initialize an empty string to store the acronym
acro = ''

# Step 5: Iterate through each word in the filtered_words list and add the first letter (uppercase) to the acronym
for word in filtered_words:
    acronym_letter = word[0].upper()
    acro += acronym_letter

# Step 6: Print the final acronym
print(acro)  # Output: OHS&E
--------------------------------------------------------------------------------------------------------------------------------------
Write code that uses the string stored in sent and creates an acronym which is assigned to the variable acro. The first two letters of each word should be used, each letter in the acronym should be a capital letter, and each element of the acronym should be separated by a “. ” (dot and space). Words that should not be included in the acronym are stored in the list stopwords. For example, if sent was assigned the string “height and ewok wonder” then the resulting acronym should be “HE. EW. WO”.



stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', 'The']
sent = "The water earth and air are vital"

# Step 1: Split the input string into words
words = sent.split()

# Step 2: Initialize an empty list to store the filtered words (without stopwords) for the acronym
filtered_words = [word for word in words if word.lower() not in stopwords]

# Step 3: Initialize an empty list to store the acronym elements
acro_list = []

# Step 4: Iterate through each word in the filtered_words list and add the first two letters (uppercase) to the acronym
for word in filtered_words:
    acronym_element = word[:2].upper()
    acro_list.append(acronym_element)

# Step 5: Join the acronym elements with ". " (dot and space) separator
acro = ". ".join(acro_list)

# Step 6: Print the final acronym
print(acro)  # Output: WA. EA. AI. AR. VI
















