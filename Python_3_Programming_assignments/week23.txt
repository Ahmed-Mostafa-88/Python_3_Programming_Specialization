
lst_check = ['plums', 'watermelon', 'kiwi', 'strawberries', 'blueberries', 'peaches', 'apples', 'mangos', 'papaya']
def m(i):
    return "Fruit: "+ i
map_testing= list(map(m,lst_check ))

----------------------------------------------------------------------------------------------------------------------------------------------
countries = ['Canada', 'Mexico', 'Brazil', 'Chile', 'Denmark', 'Botswana', 'Spain', 'Britain', 'Portugal', 'Russia', 'Thailand', 'Bangladesh', 'Nigeria', 'Argentina', 'Belarus', 'Laos', 'Australia', 'Panama', 'Egypt', 'Morocco', 'Switzerland', 'Belgium']
# Define a function to check if a string starts with 'B'
def starts_with_b(country):
    return country.startswith('B')
# Use filter() to select only the countries that start with 'B'
b_countries = list(filter(starts_with_b, countries))

--------------------------------------------------------------------------------------------------------------------------------------------
people = [('Snow', 'Jon'), ('Lannister', 'Cersei'), ('Stark', 'Arya'), ('Stark', 'Robb'), ('Lannister', 'Jamie'), ('Targaryen', 'Daenerys'), ('Stark', 'Sansa'), ('Tyrell', 'Margaery'), ('Stark', 'Eddard'), ('Lannister', 'Tyrion'), ('Baratheon', 'Joffrey'), ('Bolton', 'Ramsey'), ('Baelish', 'Peter')]
first_names = [name[1] for name in people]

-----------------------------------------------------------------------------------------------------------------------------------
lst = [["hi", "bye"], "hello", "goodbye", [9, 2], 4]
lst2 =[2*name for name in lst]

------------------------------------------------------------------------------------------------------------------------------------
students = [('Tommy', 95), ('Linda', 63), ('Carl', 70), ('Bob', 100), ('Raymond', 50), ('Sue', 75)]
passed =[n[0] for n in students if n[1] >= 70 ] 

-------------------------------------------------------------------------------------------------------------------------------
l1 = ['left', 'up', 'front']
l2 = ['right', 'down', 'back']
# Use zip to combine the lists
combined = zip(l1, l2)
# Use filter to select pairs where both elements are longer than 3 characters
filtered_pairs = filter(lambda pair: len(pair[0]) > 3 and len(pair[1]) > 3, combined)
# Convert the filtered pairs to a list
opposites = list(filtered_pairs)

----------------------------------------------------------------------------------------------------------------------------------


species = ['golden retriever', 'white tailed deer', 'black rhino', 'brown squirrel', 'field mouse', 'orangutan', 'sumatran elephant', 'rainbow trout', 'black bear', 'blue whale', 'water moccasin', 'giant panda', 'green turtle', 'blue jay', 'japanese beetle']

population = [10000, 90000, 1000, 2000000, 500000, 500, 1200, 8000, 12000, 2300, 7500, 100, 1800, 9500, 125000]

pop_info=list(zip(species,population))
endangered = [species for species, pop in pop_info if pop < 2500]

